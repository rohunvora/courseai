name: Vercel Preview Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches-ignore:
      - main

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        id: deploy
        run: |
          DEPLOYMENT_URL=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} | tail -n 1)
          echo "deployment-url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
          echo "Preview URL: $DEPLOYMENT_URL"

      - name: Save Preview URL as Artifact
        run: |
          echo "${{ steps.deploy.outputs.deployment-url }}" > preview-url.txt
          
      - name: Upload Preview URL Artifact
        uses: actions/upload-artifact@v3
        with:
          name: preview-url
          path: preview-url.txt
          retention-days: 7

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const deploymentUrl = '${{ steps.deploy.outputs.deployment-url }}';
            const comment = `### ðŸš€ Preview Deployment Ready!
            
            **Preview URL:** ${deploymentUrl}
            
            #### Quick Testing Guide:
            1. Click the preview URL above
            2. Click "Reset & Seed Demo" button in the header
            3. Test with these demo users:
               - Email: `demo@example.com` / Password: `demo123`
               - Email: `test@example.com` / Password: `test123`
            
            #### What's New:
            - âœ… AI-powered fitness coaching
            - âœ… Smart workout progression (10% safety rule)
            - âœ… Real-time form guidance
            - âœ… Progress tracking
            
            **Note:** This is a preview environment with demo data. All changes will be reset on each deployment.
            
            ---
            *Deployed at: ${new Date().toISOString()}*`;
            
            // Find and update existing comment or create new one
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Preview Deployment Ready')
            );
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }

      - name: Add Preview Label
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['preview-deployed']
            });